#!/bin/bash
# ReactOS Web-Playground BuildBot Build Scripts
# deploy - Make the built website available at a subdomain of *.web-content.reactos.org if the commit author is trusted
#
# Parameter $1 - Branch that has been built.
# Parameter $2 - Author of the changes. This is guaranteed to be a GitHub username if (and only if!) we built a PR.

#######################################
# FUNCTIONS
#######################################

# Returns 0 (true) if the given GitHub username belongs to the given GitHub Team ID, otherwise returns 1 (false).
check_team_membership() {
	local member=$1
	local team_id=$2

	local status=`curl -H "Authorization: token ${personal_access_token}" -i -s https://api.github.com/teams/${team_id}/memberships/${member} | head -n 1 | cut -d$' ' -f2`
	if [[ "${status}" == "200" ]]; then
		return 0
	else
		return 1
	fi
}


#######################################
# ENTRY POINT
#######################################

if [[ "$2" == "" ]]; then
	echo "Please specify the branch and author!"
	exit 1
fi

branch=$1
author=$2

# Read secret configuration from credentials.ini.
# Doesn't take INI sections into account, but sufficient for our use case.
source <(grep personal_access_token credentials.ini)

# These IDs are no secret and can be retrieved by an API call to https://api.github.com/orgs/reactos/teams
developer_group_id=2505522          # "ReactOS Developer Team"
trusted_group_id=3404185            # "Trusted Web-Playground Users"


# What branch are we building?
if [[ "${branch}" == "master" ]]; then
	# A push to master is only possible by the developer team, so we don't have to check any team memberships.
	subdomain="master"
elif [[ "${branch}" =~ ^refs/pull/([0-9]+)/ ]]; then
	# Everyone can open a Pull Request against our repository, but we cannot trust everyone to not abuse this system and use it to set up a malicious/spam website.
	subdomain="pr${BASH_REMATCH[1]}"

	# Check if the author is either part of the developer team or the additional group of trusted people.
	if ! { check_team_membership ${author} ${developer_group_id} || check_team_membership ${author} ${trusted_group_id} }; then
		echo "This script would usually deploy the build result of your Pull Request to https://${subdomain}.web-content.reactos.org"
		echo "However, to prevent abuse, your GitHub account first needs to be added to the trusted user list."
		echo "Ask someone from the developer team if you need this deployment feature and want to be added to the trusted user list."
		exit 0
	fi
else
	# Anything else (like a local branch) is not deployed.
	echo "Only changes to master and Pull Requests are deployed."
	exit 0
fi


# The author is trusted, so move over the built files to deploy the website.
target="/srv/www/web-content/${subdomain}"
rm -rf ${target}
mv public ${target} || exit 1

echo "Congratulations! The build result has been deployed to https://${subdomain}.web-content.reactos.org"
exit 0
